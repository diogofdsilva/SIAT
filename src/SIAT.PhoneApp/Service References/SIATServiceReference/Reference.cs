//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace SIAT.PhoneApp.SIATServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PositionInfo", Namespace="http://schemas.datacontract.org/2004/07/SIAT.Operations")]
    public partial class PositionInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime DateField;
        
        private double LatField;
        
        private double LonField;
        
        private double SpeedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Lat {
            get {
                return this.LatField;
            }
            set {
                if ((this.LatField.Equals(value) != true)) {
                    this.LatField = value;
                    this.RaisePropertyChanged("Lat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Lon {
            get {
                return this.LonField;
            }
            set {
                if ((this.LonField.Equals(value) != true)) {
                    this.LonField = value;
                    this.RaisePropertyChanged("Lon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Speed {
            get {
                return this.SpeedField;
            }
            set {
                if ((this.SpeedField.Equals(value) != true)) {
                    this.SpeedField = value;
                    this.RaisePropertyChanged("Speed");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Occurrence", Namespace="http://schemas.datacontract.org/2004/07/SIAT.Service.Contract.DTO")]
    public partial class Occurrence : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string _descriptionField;
        
        private int _idField;
        
        private long _idCurrentNodeField;
        
        private System.Nullable<long> _idLastNodeField;
        
        private byte _intensityField;
        
        private double _latField;
        
        private double _lonField;
        
        private byte _precisionField;
        
        private long _wayIdField;
        
        private string _wayNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _description {
            get {
                return this._descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this._descriptionField, value) != true)) {
                    this._descriptionField = value;
                    this.RaisePropertyChanged("_description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int _id {
            get {
                return this._idField;
            }
            set {
                if ((this._idField.Equals(value) != true)) {
                    this._idField = value;
                    this.RaisePropertyChanged("_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long _idCurrentNode {
            get {
                return this._idCurrentNodeField;
            }
            set {
                if ((this._idCurrentNodeField.Equals(value) != true)) {
                    this._idCurrentNodeField = value;
                    this.RaisePropertyChanged("_idCurrentNode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> _idLastNode {
            get {
                return this._idLastNodeField;
            }
            set {
                if ((this._idLastNodeField.Equals(value) != true)) {
                    this._idLastNodeField = value;
                    this.RaisePropertyChanged("_idLastNode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte _intensity {
            get {
                return this._intensityField;
            }
            set {
                if ((this._intensityField.Equals(value) != true)) {
                    this._intensityField = value;
                    this.RaisePropertyChanged("_intensity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double _lat {
            get {
                return this._latField;
            }
            set {
                if ((this._latField.Equals(value) != true)) {
                    this._latField = value;
                    this.RaisePropertyChanged("_lat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double _lon {
            get {
                return this._lonField;
            }
            set {
                if ((this._lonField.Equals(value) != true)) {
                    this._lonField = value;
                    this.RaisePropertyChanged("_lon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte _precision {
            get {
                return this._precisionField;
            }
            set {
                if ((this._precisionField.Equals(value) != true)) {
                    this._precisionField = value;
                    this.RaisePropertyChanged("_precision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long _wayId {
            get {
                return this._wayIdField;
            }
            set {
                if ((this._wayIdField.Equals(value) != true)) {
                    this._wayIdField = value;
                    this.RaisePropertyChanged("_wayId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _wayName {
            get {
                return this._wayNameField;
            }
            set {
                if ((object.ReferenceEquals(this._wayNameField, value) != true)) {
                    this._wayNameField = value;
                    this.RaisePropertyChanged("_wayName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Alert", Namespace="http://schemas.datacontract.org/2004/07/SIAT.Service.Contract.DTO")]
    public partial class Alert : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double _latField;
        
        private SIAT.PhoneApp.SIATServiceReference.AlertLevel _levelField;
        
        private double _lonField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double _lat {
            get {
                return this._latField;
            }
            set {
                if ((this._latField.Equals(value) != true)) {
                    this._latField = value;
                    this.RaisePropertyChanged("_lat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SIAT.PhoneApp.SIATServiceReference.AlertLevel _level {
            get {
                return this._levelField;
            }
            set {
                if ((this._levelField.Equals(value) != true)) {
                    this._levelField = value;
                    this.RaisePropertyChanged("_level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double _lon {
            get {
                return this._lonField;
            }
            set {
                if ((this._lonField.Equals(value) != true)) {
                    this._lonField = value;
                    this.RaisePropertyChanged("_lon");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlertLevel", Namespace="http://schemas.datacontract.org/2004/07/SIAT.Service.Contract.DTO")]
    public enum AlertLevel : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RoadBlock = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HighTraffic = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MediumTraffic = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Way", Namespace="http://schemas.datacontract.org/2004/07/SIAT.OSM.Service.Contract.DTO")]
    public partial class Way : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string _countryField;
        
        private long _idField;
        
        private string _nameField;
        
        private bool _oneWayField;
        
        private string _refField;
        
        private string _typeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _country {
            get {
                return this._countryField;
            }
            set {
                if ((object.ReferenceEquals(this._countryField, value) != true)) {
                    this._countryField = value;
                    this.RaisePropertyChanged("_country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long _id {
            get {
                return this._idField;
            }
            set {
                if ((this._idField.Equals(value) != true)) {
                    this._idField = value;
                    this.RaisePropertyChanged("_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _name {
            get {
                return this._nameField;
            }
            set {
                if ((object.ReferenceEquals(this._nameField, value) != true)) {
                    this._nameField = value;
                    this.RaisePropertyChanged("_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool _oneWay {
            get {
                return this._oneWayField;
            }
            set {
                if ((this._oneWayField.Equals(value) != true)) {
                    this._oneWayField = value;
                    this.RaisePropertyChanged("_oneWay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _ref {
            get {
                return this._refField;
            }
            set {
                if ((object.ReferenceEquals(this._refField, value) != true)) {
                    this._refField = value;
                    this.RaisePropertyChanged("_ref");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _type {
            get {
                return this._typeField;
            }
            set {
                if ((object.ReferenceEquals(this._typeField, value) != true)) {
                    this._typeField = value;
                    this.RaisePropertyChanged("_type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SIATServiceReference.ISIATServiceWP7")]
    public interface ISIATServiceWP7 {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISIATServices/SendPositionInformation", ReplyAction="http://tempuri.org/ISIATServices/SendPositionInformationResponse")]
        System.IAsyncResult BeginSendPositionInformation(System.Collections.ObjectModel.ObservableCollection<SIAT.PhoneApp.SIATServiceReference.PositionInfo> listPosition, System.AsyncCallback callback, object asyncState);
        
        void EndSendPositionInformation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISIATServices/ListAllOccurrences", ReplyAction="http://tempuri.org/ISIATServices/ListAllOccurrencesResponse")]
        System.IAsyncResult BeginListAllOccurrences(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SIAT.PhoneApp.SIATServiceReference.Occurrence> EndListAllOccurrences(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISIATServices/ListAllOccurrencesInWay", ReplyAction="http://tempuri.org/ISIATServices/ListAllOccurrencesInWayResponse")]
        System.IAsyncResult BeginListAllOccurrencesInWay(long wayId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SIAT.PhoneApp.SIATServiceReference.Occurrence> EndListAllOccurrencesInWay(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISIATServices/Alert", ReplyAction="http://tempuri.org/ISIATServices/AlertResponse")]
        System.IAsyncResult BeginAlert(SIAT.PhoneApp.SIATServiceReference.Alert alert, System.AsyncCallback callback, object asyncState);
        
        void EndAlert(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISIATServices/CurrentWay", ReplyAction="http://tempuri.org/ISIATServices/CurrentWayResponse")]
        System.IAsyncResult BeginCurrentWay(double lat, double lon, System.AsyncCallback callback, object asyncState);
        
        SIAT.PhoneApp.SIATServiceReference.Way EndCurrentWay(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISIATServiceWP7/CreateOrUpdateOccurrencesSubscription", ReplyAction="http://tempuri.org/ISIATServiceWP7/CreateOrUpdateOccurrencesSubscriptionResponse")]
        System.IAsyncResult BeginCreateOrUpdateOccurrencesSubscription(System.Uri uri, long wayId, System.AsyncCallback callback, object asyncState);
        
        void EndCreateOrUpdateOccurrencesSubscription(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISIATServiceWP7/ChangeOccurrencesSubscriptionUri", ReplyAction="http://tempuri.org/ISIATServiceWP7/ChangeOccurrencesSubscriptionUriResponse")]
        System.IAsyncResult BeginChangeOccurrencesSubscriptionUri(System.Uri oldUri, System.Uri newUri, System.AsyncCallback callback, object asyncState);
        
        void EndChangeOccurrencesSubscriptionUri(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISIATServiceWP7/DeleteOccurrencesSubscription", ReplyAction="http://tempuri.org/ISIATServiceWP7/DeleteOccurrencesSubscriptionResponse")]
        System.IAsyncResult BeginDeleteOccurrencesSubscription(System.Uri uri, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteOccurrencesSubscription(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISIATServiceWP7Channel : SIAT.PhoneApp.SIATServiceReference.ISIATServiceWP7, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListAllOccurrencesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListAllOccurrencesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SIAT.PhoneApp.SIATServiceReference.Occurrence> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SIAT.PhoneApp.SIATServiceReference.Occurrence>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListAllOccurrencesInWayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListAllOccurrencesInWayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SIAT.PhoneApp.SIATServiceReference.Occurrence> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SIAT.PhoneApp.SIATServiceReference.Occurrence>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CurrentWayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CurrentWayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SIAT.PhoneApp.SIATServiceReference.Way Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SIAT.PhoneApp.SIATServiceReference.Way)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SIATServiceWP7Client : System.ServiceModel.ClientBase<SIAT.PhoneApp.SIATServiceReference.ISIATServiceWP7>, SIAT.PhoneApp.SIATServiceReference.ISIATServiceWP7 {
        
        private BeginOperationDelegate onBeginSendPositionInformationDelegate;
        
        private EndOperationDelegate onEndSendPositionInformationDelegate;
        
        private System.Threading.SendOrPostCallback onSendPositionInformationCompletedDelegate;
        
        private BeginOperationDelegate onBeginListAllOccurrencesDelegate;
        
        private EndOperationDelegate onEndListAllOccurrencesDelegate;
        
        private System.Threading.SendOrPostCallback onListAllOccurrencesCompletedDelegate;
        
        private BeginOperationDelegate onBeginListAllOccurrencesInWayDelegate;
        
        private EndOperationDelegate onEndListAllOccurrencesInWayDelegate;
        
        private System.Threading.SendOrPostCallback onListAllOccurrencesInWayCompletedDelegate;
        
        private BeginOperationDelegate onBeginAlertDelegate;
        
        private EndOperationDelegate onEndAlertDelegate;
        
        private System.Threading.SendOrPostCallback onAlertCompletedDelegate;
        
        private BeginOperationDelegate onBeginCurrentWayDelegate;
        
        private EndOperationDelegate onEndCurrentWayDelegate;
        
        private System.Threading.SendOrPostCallback onCurrentWayCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateOrUpdateOccurrencesSubscriptionDelegate;
        
        private EndOperationDelegate onEndCreateOrUpdateOccurrencesSubscriptionDelegate;
        
        private System.Threading.SendOrPostCallback onCreateOrUpdateOccurrencesSubscriptionCompletedDelegate;
        
        private BeginOperationDelegate onBeginChangeOccurrencesSubscriptionUriDelegate;
        
        private EndOperationDelegate onEndChangeOccurrencesSubscriptionUriDelegate;
        
        private System.Threading.SendOrPostCallback onChangeOccurrencesSubscriptionUriCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteOccurrencesSubscriptionDelegate;
        
        private EndOperationDelegate onEndDeleteOccurrencesSubscriptionDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteOccurrencesSubscriptionCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public SIATServiceWP7Client() {
        }
        
        public SIATServiceWP7Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SIATServiceWP7Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SIATServiceWP7Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SIATServiceWP7Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendPositionInformationCompleted;
        
        public event System.EventHandler<ListAllOccurrencesCompletedEventArgs> ListAllOccurrencesCompleted;
        
        public event System.EventHandler<ListAllOccurrencesInWayCompletedEventArgs> ListAllOccurrencesInWayCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AlertCompleted;
        
        public event System.EventHandler<CurrentWayCompletedEventArgs> CurrentWayCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CreateOrUpdateOccurrencesSubscriptionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ChangeOccurrencesSubscriptionUriCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteOccurrencesSubscriptionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SIAT.PhoneApp.SIATServiceReference.ISIATServiceWP7.BeginSendPositionInformation(System.Collections.ObjectModel.ObservableCollection<SIAT.PhoneApp.SIATServiceReference.PositionInfo> listPosition, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendPositionInformation(listPosition, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SIAT.PhoneApp.SIATServiceReference.ISIATServiceWP7.EndSendPositionInformation(System.IAsyncResult result) {
            base.Channel.EndSendPositionInformation(result);
        }
        
        private System.IAsyncResult OnBeginSendPositionInformation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<SIAT.PhoneApp.SIATServiceReference.PositionInfo> listPosition = ((System.Collections.ObjectModel.ObservableCollection<SIAT.PhoneApp.SIATServiceReference.PositionInfo>)(inValues[0]));
            return ((SIAT.PhoneApp.SIATServiceReference.ISIATServiceWP7)(this)).BeginSendPositionInformation(listPosition, callback, asyncState);
        }
        
        private object[] OnEndSendPositionInformation(System.IAsyncResult result) {
            ((SIAT.PhoneApp.SIATServiceReference.ISIATServiceWP7)(this)).EndSendPositionInformation(result);
            return null;
        }
        
        private void OnSendPositionInformationCompleted(object state) {
            if ((this.SendPositionInformationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendPositionInformationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendPositionInformationAsync(System.Collections.ObjectModel.ObservableCollection<SIAT.PhoneApp.SIATServiceReference.PositionInfo> listPosition) {
            this.SendPositionInformationAsync(listPosition, null);
        }
        
        public void SendPositionInformationAsync(System.Collections.ObjectModel.ObservableCollection<SIAT.PhoneApp.SIATServiceReference.PositionInfo> listPosition, object userState) {
            if ((this.onBeginSendPositionInformationDelegate == null)) {
                this.onBeginSendPositionInformationDelegate = new BeginOperationDelegate(this.OnBeginSendPositionInformation);
            }
            if ((this.onEndSendPositionInformationDelegate == null)) {
                this.onEndSendPositionInformationDelegate = new EndOperationDelegate(this.OnEndSendPositionInformation);
            }
            if ((this.onSendPositionInformationCompletedDelegate == null)) {
                this.onSendPositionInformationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendPositionInformationCompleted);
            }
            base.InvokeAsync(this.onBeginSendPositionInformationDelegate, new object[] {
                        listPosition}, this.onEndSendPositionInformationDelegate, this.onSendPositionInformationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SIAT.PhoneApp.SIATServiceReference.ISIATServiceWP7.BeginListAllOccurrences(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListAllOccurrences(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SIAT.PhoneApp.SIATServiceReference.Occurrence> SIAT.PhoneApp.SIATServiceReference.ISIATServiceWP7.EndListAllOccurrences(System.IAsyncResult result) {
            return base.Channel.EndListAllOccurrences(result);
        }
        
        private System.IAsyncResult OnBeginListAllOccurrences(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SIAT.PhoneApp.SIATServiceReference.ISIATServiceWP7)(this)).BeginListAllOccurrences(callback, asyncState);
        }
        
        private object[] OnEndListAllOccurrences(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SIAT.PhoneApp.SIATServiceReference.Occurrence> retVal = ((SIAT.PhoneApp.SIATServiceReference.ISIATServiceWP7)(this)).EndListAllOccurrences(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListAllOccurrencesCompleted(object state) {
            if ((this.ListAllOccurrencesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListAllOccurrencesCompleted(this, new ListAllOccurrencesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListAllOccurrencesAsync() {
            this.ListAllOccurrencesAsync(null);
        }
        
        public void ListAllOccurrencesAsync(object userState) {
            if ((this.onBeginListAllOccurrencesDelegate == null)) {
                this.onBeginListAllOccurrencesDelegate = new BeginOperationDelegate(this.OnBeginListAllOccurrences);
            }
            if ((this.onEndListAllOccurrencesDelegate == null)) {
                this.onEndListAllOccurrencesDelegate = new EndOperationDelegate(this.OnEndListAllOccurrences);
            }
            if ((this.onListAllOccurrencesCompletedDelegate == null)) {
                this.onListAllOccurrencesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListAllOccurrencesCompleted);
            }
            base.InvokeAsync(this.onBeginListAllOccurrencesDelegate, null, this.onEndListAllOccurrencesDelegate, this.onListAllOccurrencesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SIAT.PhoneApp.SIATServiceReference.ISIATServiceWP7.BeginListAllOccurrencesInWay(long wayId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListAllOccurrencesInWay(wayId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SIAT.PhoneApp.SIATServiceReference.Occurrence> SIAT.PhoneApp.SIATServiceReference.ISIATServiceWP7.EndListAllOccurrencesInWay(System.IAsyncResult result) {
            return base.Channel.EndListAllOccurrencesInWay(result);
        }
        
        private System.IAsyncResult OnBeginListAllOccurrencesInWay(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long wayId = ((long)(inValues[0]));
            return ((SIAT.PhoneApp.SIATServiceReference.ISIATServiceWP7)(this)).BeginListAllOccurrencesInWay(wayId, callback, asyncState);
        }
        
        private object[] OnEndListAllOccurrencesInWay(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SIAT.PhoneApp.SIATServiceReference.Occurrence> retVal = ((SIAT.PhoneApp.SIATServiceReference.ISIATServiceWP7)(this)).EndListAllOccurrencesInWay(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListAllOccurrencesInWayCompleted(object state) {
            if ((this.ListAllOccurrencesInWayCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListAllOccurrencesInWayCompleted(this, new ListAllOccurrencesInWayCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListAllOccurrencesInWayAsync(long wayId) {
            this.ListAllOccurrencesInWayAsync(wayId, null);
        }
        
        public void ListAllOccurrencesInWayAsync(long wayId, object userState) {
            if ((this.onBeginListAllOccurrencesInWayDelegate == null)) {
                this.onBeginListAllOccurrencesInWayDelegate = new BeginOperationDelegate(this.OnBeginListAllOccurrencesInWay);
            }
            if ((this.onEndListAllOccurrencesInWayDelegate == null)) {
                this.onEndListAllOccurrencesInWayDelegate = new EndOperationDelegate(this.OnEndListAllOccurrencesInWay);
            }
            if ((this.onListAllOccurrencesInWayCompletedDelegate == null)) {
                this.onListAllOccurrencesInWayCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListAllOccurrencesInWayCompleted);
            }
            base.InvokeAsync(this.onBeginListAllOccurrencesInWayDelegate, new object[] {
                        wayId}, this.onEndListAllOccurrencesInWayDelegate, this.onListAllOccurrencesInWayCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SIAT.PhoneApp.SIATServiceReference.ISIATServiceWP7.BeginAlert(SIAT.PhoneApp.SIATServiceReference.Alert alert, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAlert(alert, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SIAT.PhoneApp.SIATServiceReference.ISIATServiceWP7.EndAlert(System.IAsyncResult result) {
            base.Channel.EndAlert(result);
        }
        
        private System.IAsyncResult OnBeginAlert(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SIAT.PhoneApp.SIATServiceReference.Alert alert = ((SIAT.PhoneApp.SIATServiceReference.Alert)(inValues[0]));
            return ((SIAT.PhoneApp.SIATServiceReference.ISIATServiceWP7)(this)).BeginAlert(alert, callback, asyncState);
        }
        
        private object[] OnEndAlert(System.IAsyncResult result) {
            ((SIAT.PhoneApp.SIATServiceReference.ISIATServiceWP7)(this)).EndAlert(result);
            return null;
        }
        
        private void OnAlertCompleted(object state) {
            if ((this.AlertCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AlertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AlertAsync(SIAT.PhoneApp.SIATServiceReference.Alert alert) {
            this.AlertAsync(alert, null);
        }
        
        public void AlertAsync(SIAT.PhoneApp.SIATServiceReference.Alert alert, object userState) {
            if ((this.onBeginAlertDelegate == null)) {
                this.onBeginAlertDelegate = new BeginOperationDelegate(this.OnBeginAlert);
            }
            if ((this.onEndAlertDelegate == null)) {
                this.onEndAlertDelegate = new EndOperationDelegate(this.OnEndAlert);
            }
            if ((this.onAlertCompletedDelegate == null)) {
                this.onAlertCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAlertCompleted);
            }
            base.InvokeAsync(this.onBeginAlertDelegate, new object[] {
                        alert}, this.onEndAlertDelegate, this.onAlertCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SIAT.PhoneApp.SIATServiceReference.ISIATServiceWP7.BeginCurrentWay(double lat, double lon, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCurrentWay(lat, lon, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SIAT.PhoneApp.SIATServiceReference.Way SIAT.PhoneApp.SIATServiceReference.ISIATServiceWP7.EndCurrentWay(System.IAsyncResult result) {
            return base.Channel.EndCurrentWay(result);
        }
        
        private System.IAsyncResult OnBeginCurrentWay(object[] inValues, System.AsyncCallback callback, object asyncState) {
            double lat = ((double)(inValues[0]));
            double lon = ((double)(inValues[1]));
            return ((SIAT.PhoneApp.SIATServiceReference.ISIATServiceWP7)(this)).BeginCurrentWay(lat, lon, callback, asyncState);
        }
        
        private object[] OnEndCurrentWay(System.IAsyncResult result) {
            SIAT.PhoneApp.SIATServiceReference.Way retVal = ((SIAT.PhoneApp.SIATServiceReference.ISIATServiceWP7)(this)).EndCurrentWay(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCurrentWayCompleted(object state) {
            if ((this.CurrentWayCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CurrentWayCompleted(this, new CurrentWayCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CurrentWayAsync(double lat, double lon) {
            this.CurrentWayAsync(lat, lon, null);
        }
        
        public void CurrentWayAsync(double lat, double lon, object userState) {
            if ((this.onBeginCurrentWayDelegate == null)) {
                this.onBeginCurrentWayDelegate = new BeginOperationDelegate(this.OnBeginCurrentWay);
            }
            if ((this.onEndCurrentWayDelegate == null)) {
                this.onEndCurrentWayDelegate = new EndOperationDelegate(this.OnEndCurrentWay);
            }
            if ((this.onCurrentWayCompletedDelegate == null)) {
                this.onCurrentWayCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCurrentWayCompleted);
            }
            base.InvokeAsync(this.onBeginCurrentWayDelegate, new object[] {
                        lat,
                        lon}, this.onEndCurrentWayDelegate, this.onCurrentWayCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SIAT.PhoneApp.SIATServiceReference.ISIATServiceWP7.BeginCreateOrUpdateOccurrencesSubscription(System.Uri uri, long wayId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateOrUpdateOccurrencesSubscription(uri, wayId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SIAT.PhoneApp.SIATServiceReference.ISIATServiceWP7.EndCreateOrUpdateOccurrencesSubscription(System.IAsyncResult result) {
            base.Channel.EndCreateOrUpdateOccurrencesSubscription(result);
        }
        
        private System.IAsyncResult OnBeginCreateOrUpdateOccurrencesSubscription(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Uri uri = ((System.Uri)(inValues[0]));
            long wayId = ((long)(inValues[1]));
            return ((SIAT.PhoneApp.SIATServiceReference.ISIATServiceWP7)(this)).BeginCreateOrUpdateOccurrencesSubscription(uri, wayId, callback, asyncState);
        }
        
        private object[] OnEndCreateOrUpdateOccurrencesSubscription(System.IAsyncResult result) {
            ((SIAT.PhoneApp.SIATServiceReference.ISIATServiceWP7)(this)).EndCreateOrUpdateOccurrencesSubscription(result);
            return null;
        }
        
        private void OnCreateOrUpdateOccurrencesSubscriptionCompleted(object state) {
            if ((this.CreateOrUpdateOccurrencesSubscriptionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateOrUpdateOccurrencesSubscriptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateOrUpdateOccurrencesSubscriptionAsync(System.Uri uri, long wayId) {
            this.CreateOrUpdateOccurrencesSubscriptionAsync(uri, wayId, null);
        }
        
        public void CreateOrUpdateOccurrencesSubscriptionAsync(System.Uri uri, long wayId, object userState) {
            if ((this.onBeginCreateOrUpdateOccurrencesSubscriptionDelegate == null)) {
                this.onBeginCreateOrUpdateOccurrencesSubscriptionDelegate = new BeginOperationDelegate(this.OnBeginCreateOrUpdateOccurrencesSubscription);
            }
            if ((this.onEndCreateOrUpdateOccurrencesSubscriptionDelegate == null)) {
                this.onEndCreateOrUpdateOccurrencesSubscriptionDelegate = new EndOperationDelegate(this.OnEndCreateOrUpdateOccurrencesSubscription);
            }
            if ((this.onCreateOrUpdateOccurrencesSubscriptionCompletedDelegate == null)) {
                this.onCreateOrUpdateOccurrencesSubscriptionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateOccurrencesSubscriptionCompleted);
            }
            base.InvokeAsync(this.onBeginCreateOrUpdateOccurrencesSubscriptionDelegate, new object[] {
                        uri,
                        wayId}, this.onEndCreateOrUpdateOccurrencesSubscriptionDelegate, this.onCreateOrUpdateOccurrencesSubscriptionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SIAT.PhoneApp.SIATServiceReference.ISIATServiceWP7.BeginChangeOccurrencesSubscriptionUri(System.Uri oldUri, System.Uri newUri, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginChangeOccurrencesSubscriptionUri(oldUri, newUri, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SIAT.PhoneApp.SIATServiceReference.ISIATServiceWP7.EndChangeOccurrencesSubscriptionUri(System.IAsyncResult result) {
            base.Channel.EndChangeOccurrencesSubscriptionUri(result);
        }
        
        private System.IAsyncResult OnBeginChangeOccurrencesSubscriptionUri(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Uri oldUri = ((System.Uri)(inValues[0]));
            System.Uri newUri = ((System.Uri)(inValues[1]));
            return ((SIAT.PhoneApp.SIATServiceReference.ISIATServiceWP7)(this)).BeginChangeOccurrencesSubscriptionUri(oldUri, newUri, callback, asyncState);
        }
        
        private object[] OnEndChangeOccurrencesSubscriptionUri(System.IAsyncResult result) {
            ((SIAT.PhoneApp.SIATServiceReference.ISIATServiceWP7)(this)).EndChangeOccurrencesSubscriptionUri(result);
            return null;
        }
        
        private void OnChangeOccurrencesSubscriptionUriCompleted(object state) {
            if ((this.ChangeOccurrencesSubscriptionUriCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ChangeOccurrencesSubscriptionUriCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ChangeOccurrencesSubscriptionUriAsync(System.Uri oldUri, System.Uri newUri) {
            this.ChangeOccurrencesSubscriptionUriAsync(oldUri, newUri, null);
        }
        
        public void ChangeOccurrencesSubscriptionUriAsync(System.Uri oldUri, System.Uri newUri, object userState) {
            if ((this.onBeginChangeOccurrencesSubscriptionUriDelegate == null)) {
                this.onBeginChangeOccurrencesSubscriptionUriDelegate = new BeginOperationDelegate(this.OnBeginChangeOccurrencesSubscriptionUri);
            }
            if ((this.onEndChangeOccurrencesSubscriptionUriDelegate == null)) {
                this.onEndChangeOccurrencesSubscriptionUriDelegate = new EndOperationDelegate(this.OnEndChangeOccurrencesSubscriptionUri);
            }
            if ((this.onChangeOccurrencesSubscriptionUriCompletedDelegate == null)) {
                this.onChangeOccurrencesSubscriptionUriCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnChangeOccurrencesSubscriptionUriCompleted);
            }
            base.InvokeAsync(this.onBeginChangeOccurrencesSubscriptionUriDelegate, new object[] {
                        oldUri,
                        newUri}, this.onEndChangeOccurrencesSubscriptionUriDelegate, this.onChangeOccurrencesSubscriptionUriCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SIAT.PhoneApp.SIATServiceReference.ISIATServiceWP7.BeginDeleteOccurrencesSubscription(System.Uri uri, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteOccurrencesSubscription(uri, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SIAT.PhoneApp.SIATServiceReference.ISIATServiceWP7.EndDeleteOccurrencesSubscription(System.IAsyncResult result) {
            base.Channel.EndDeleteOccurrencesSubscription(result);
        }
        
        private System.IAsyncResult OnBeginDeleteOccurrencesSubscription(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Uri uri = ((System.Uri)(inValues[0]));
            return ((SIAT.PhoneApp.SIATServiceReference.ISIATServiceWP7)(this)).BeginDeleteOccurrencesSubscription(uri, callback, asyncState);
        }
        
        private object[] OnEndDeleteOccurrencesSubscription(System.IAsyncResult result) {
            ((SIAT.PhoneApp.SIATServiceReference.ISIATServiceWP7)(this)).EndDeleteOccurrencesSubscription(result);
            return null;
        }
        
        private void OnDeleteOccurrencesSubscriptionCompleted(object state) {
            if ((this.DeleteOccurrencesSubscriptionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteOccurrencesSubscriptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteOccurrencesSubscriptionAsync(System.Uri uri) {
            this.DeleteOccurrencesSubscriptionAsync(uri, null);
        }
        
        public void DeleteOccurrencesSubscriptionAsync(System.Uri uri, object userState) {
            if ((this.onBeginDeleteOccurrencesSubscriptionDelegate == null)) {
                this.onBeginDeleteOccurrencesSubscriptionDelegate = new BeginOperationDelegate(this.OnBeginDeleteOccurrencesSubscription);
            }
            if ((this.onEndDeleteOccurrencesSubscriptionDelegate == null)) {
                this.onEndDeleteOccurrencesSubscriptionDelegate = new EndOperationDelegate(this.OnEndDeleteOccurrencesSubscription);
            }
            if ((this.onDeleteOccurrencesSubscriptionCompletedDelegate == null)) {
                this.onDeleteOccurrencesSubscriptionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteOccurrencesSubscriptionCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteOccurrencesSubscriptionDelegate, new object[] {
                        uri}, this.onEndDeleteOccurrencesSubscriptionDelegate, this.onDeleteOccurrencesSubscriptionCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SIAT.PhoneApp.SIATServiceReference.ISIATServiceWP7 CreateChannel() {
            return new SIATServiceWP7ClientChannel(this);
        }
        
        private class SIATServiceWP7ClientChannel : ChannelBase<SIAT.PhoneApp.SIATServiceReference.ISIATServiceWP7>, SIAT.PhoneApp.SIATServiceReference.ISIATServiceWP7 {
            
            public SIATServiceWP7ClientChannel(System.ServiceModel.ClientBase<SIAT.PhoneApp.SIATServiceReference.ISIATServiceWP7> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginSendPositionInformation(System.Collections.ObjectModel.ObservableCollection<SIAT.PhoneApp.SIATServiceReference.PositionInfo> listPosition, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = listPosition;
                System.IAsyncResult _result = base.BeginInvoke("SendPositionInformation", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSendPositionInformation(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SendPositionInformation", _args, result);
            }
            
            public System.IAsyncResult BeginListAllOccurrences(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("ListAllOccurrences", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SIAT.PhoneApp.SIATServiceReference.Occurrence> EndListAllOccurrences(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SIAT.PhoneApp.SIATServiceReference.Occurrence> _result = ((System.Collections.ObjectModel.ObservableCollection<SIAT.PhoneApp.SIATServiceReference.Occurrence>)(base.EndInvoke("ListAllOccurrences", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListAllOccurrencesInWay(long wayId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = wayId;
                System.IAsyncResult _result = base.BeginInvoke("ListAllOccurrencesInWay", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SIAT.PhoneApp.SIATServiceReference.Occurrence> EndListAllOccurrencesInWay(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SIAT.PhoneApp.SIATServiceReference.Occurrence> _result = ((System.Collections.ObjectModel.ObservableCollection<SIAT.PhoneApp.SIATServiceReference.Occurrence>)(base.EndInvoke("ListAllOccurrencesInWay", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAlert(SIAT.PhoneApp.SIATServiceReference.Alert alert, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = alert;
                System.IAsyncResult _result = base.BeginInvoke("Alert", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAlert(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Alert", _args, result);
            }
            
            public System.IAsyncResult BeginCurrentWay(double lat, double lon, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = lat;
                _args[1] = lon;
                System.IAsyncResult _result = base.BeginInvoke("CurrentWay", _args, callback, asyncState);
                return _result;
            }
            
            public SIAT.PhoneApp.SIATServiceReference.Way EndCurrentWay(System.IAsyncResult result) {
                object[] _args = new object[0];
                SIAT.PhoneApp.SIATServiceReference.Way _result = ((SIAT.PhoneApp.SIATServiceReference.Way)(base.EndInvoke("CurrentWay", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreateOrUpdateOccurrencesSubscription(System.Uri uri, long wayId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = uri;
                _args[1] = wayId;
                System.IAsyncResult _result = base.BeginInvoke("CreateOrUpdateOccurrencesSubscription", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCreateOrUpdateOccurrencesSubscription(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CreateOrUpdateOccurrencesSubscription", _args, result);
            }
            
            public System.IAsyncResult BeginChangeOccurrencesSubscriptionUri(System.Uri oldUri, System.Uri newUri, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = oldUri;
                _args[1] = newUri;
                System.IAsyncResult _result = base.BeginInvoke("ChangeOccurrencesSubscriptionUri", _args, callback, asyncState);
                return _result;
            }
            
            public void EndChangeOccurrencesSubscriptionUri(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ChangeOccurrencesSubscriptionUri", _args, result);
            }
            
            public System.IAsyncResult BeginDeleteOccurrencesSubscription(System.Uri uri, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = uri;
                System.IAsyncResult _result = base.BeginInvoke("DeleteOccurrencesSubscription", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteOccurrencesSubscription(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteOccurrencesSubscription", _args, result);
            }
        }
    }
}
